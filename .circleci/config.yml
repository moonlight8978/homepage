version: 2.1

commands:
  prepare:
    description: Prepare environment
    steps:
      - checkout

      - restore_cache:
          keys:
            - node-modules-v1-{{ checksum "yarn.lock" }}
            - node-modules-v1-

      - run:
          name: Install npm packages
          command: yarn install

      - save_cache:
          paths:
            - ./node_modules
          key: node-modules-v1-{{ checksum "yarn.lock" }}

executors:
  react_app:
    docker:
      - image: circleci/node:erbium
    working_directory: ~/app

jobs:
  check:
    executor: react_app
    steps:
      - prepare

      - run:
          name: Check npm packages
          command: yarn run check

      - run:
          name: Linting
          command: yarn eslint

  test:
    executor: react_app
    steps:
      - prepare

      - run:
          name: Run unit tests with coverage
          command: yarn test:unit:coverage

      # - run:
      #     name: Run e2e tests
      #     command: yarn test:e2e

      - persist_to_workspace:
          root: .
          paths:
            - coverage

  collect_coverage:
    executor: react_app
    steps:
      - prepare

      - run:
          name: Push coverage to codecov
          command: yarn codecov

  release:
    executor: react_app
    steps:
      - add_ssh_keys:
          fingerprints:
            - b5:fc:a6:cb:f2:3e:71:02:47:97:71:3a:75:00:4c:4c

      - prepare

      - run:
          name: Config git info
          command: |
            git config --global user.email 'deploy@circleci'
            git config --global user.name 'CircleCI'

      - deploy:
          name: Build and deploy to github.io
          command: yarn deploy

      - run:
          name: Create release tag
          command: |
            TIMESTAMP=$(date '+%Y%m%d%H%M%S')
            VERSION=$(cat package.json |
              grep version |
              head -1 |
              awk -F: '{ print $2 }' |
              sed 's/[", ]//g')
            BRANCH=$(git rev-parse --abbrev-ref HEAD)
            COMMIT_ID=$(git rev-parse HEAD)
            curl --fail --data '{
                "tag_name": "release-$TIMESTAMP",
                "target_commitish": "develop",
                "name": "Version $VERSION",
                "body": "- Branch: $BRANCH\r\n- Commit ID: $COMMIT_ID\r\n- Released time: $TIMESTAMP",
                "draft": false,
                "prerelease": false}' \
              --header "Authorization: token $GITHUB_ACCESS_TOKEN" \
              https://api.github.com/repos/moonlight8978/moonlight8978.github.io/releases

workflows:
  workflow:
    jobs:
      - check
      - test:
          requires:
            - check
      - collect_coverage:
          requires:
            - test
      - release:
          requires:
            - test
          # filters:
          #   branches:
          #     only:
          #       - develop
