(self.webpackChunkmoonlight_8978_github_io=self.webpackChunkmoonlight_8978_github_io||[]).push([[6456],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return s},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(r),m=o,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||a;return r?n.createElement(f,i(i({ref:t},s),{},{components:r})):n.createElement(f,i({ref:t},s))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6011:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return l},metadata:function(){return u},toc:function(){return c},default:function(){return p}});var n=r(2122),o=r(9756),a=(r(7294),r(3905)),i=["components"],l={title:"AWS Route 53",code:"N/A"},u={unversionedId:"aws-developer-associated/route53",id:"aws-developer-associated/route53",isDocsHomePage:!1,title:"AWS Route 53",description:"Route53 points domain to AWS resources",source:"@site/books/aws-developer-associated/route53.md",sourceDirName:"aws-developer-associated",slug:"/aws-developer-associated/route53",permalink:"/books/aws-developer-associated/route53",editUrl:"https://github.com/moonlight8978/moonlight8978.github.io/edit/v2/books/books/aws-developer-associated/route53.md",version:"current",lastUpdatedAt:1623052541,formattedLastUpdatedAt:"6/7/2021",frontMatter:{title:"AWS Route 53",code:"N/A"},sidebar:"tutorialSidebar",previous:{title:"RDS",permalink:"/books/aws-developer-associated/rds"},next:{title:"AWS Simple Storage Service",permalink:"/books/aws-developer-associated/s3"}},c=[{value:"Components",id:"components",children:[]},{value:"TODO:",id:"todo",children:[]}],s={toc:c};function p(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Route53 points domain to AWS resources"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"API Gateway"),(0,a.kt)("li",{parentName:"ul"},"ALB"),(0,a.kt)("li",{parentName:"ul"},"CloudFront"),(0,a.kt)("li",{parentName:"ul"},"...")),(0,a.kt)("h2",{id:"components"},"Components"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Hosted zone (domain)")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Record sets (subdomain)"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Alias: create AWS service alias"),(0,a.kt)("li",{parentName:"ul"},"Routing policy: If there're multiple destinations",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Simple: random selection"),(0,a.kt)("li",{parentName:"ul"},"Weighted: route traffic based on weighted values, allows to send a certain percentage of overall traffic to one server, and have other traffic to completely different server"),(0,a.kt)("li",{parentName:"ul"},"Latency-Based: route traffic to region with lowest latency"),(0,a.kt)("li",{parentName:"ul"},"Failover: route traffic if primary endpoint is unhealthy to secondary endpoint"),(0,a.kt)("li",{parentName:"ul"},"Geolocation: route traffic based on the location of user"),(0,a.kt)("li",{parentName:"ul"},"Multivalue answer: respond to DNS queries with up to 8 healthy records selected at random. Similar to Simple policy, however with an added heath check"))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Health check:"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Every 30s by default. Can be reduced to 10s"),(0,a.kt)("li",{parentName:"ul"},"CloudWatch alarm can be created to alert unhealthy"),(0,a.kt)("li",{parentName:"ul"},"A health check can monitor another health check"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Resolver"))),(0,a.kt)("h2",{id:"todo"},"TODO:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Resolver")))}p.isMDXComponent=!0}}]);