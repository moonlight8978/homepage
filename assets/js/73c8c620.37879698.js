(self.webpackChunkmoonlight_8978_github_io=self.webpackChunkmoonlight_8978_github_io||[]).push([[4130],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return p},kt:function(){return d}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),u=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=u(a),d=n,k=m["".concat(s,".").concat(d)]||m[d]||c[d]||l;return a?r.createElement(k,i(i({ref:t},p),{},{components:a})):r.createElement(k,i({ref:t},p))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var u=2;u<l;u++)i[u]=a[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},8745:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return o},metadata:function(){return s},toc:function(){return u},default:function(){return c}});var r=a(2122),n=a(9756),l=(a(7294),a(3905)),i=["components"],o={title:"AWS Simple Storage Service",code:"N/A"},s={unversionedId:"aws-developer-associated/s3",id:"aws-developer-associated/s3",isDocsHomePage:!1,title:"AWS Simple Storage Service",description:"Overview",source:"@site/books/aws-developer-associated/s3.md",sourceDirName:"aws-developer-associated",slug:"/aws-developer-associated/s3",permalink:"/books/aws-developer-associated/s3",editUrl:"https://github.com/moonlight8978/moonlight8978.github.io/edit/v2/books/books/aws-developer-associated/s3.md",version:"current",lastUpdatedAt:1623052541,formattedLastUpdatedAt:"6/7/2021",frontMatter:{title:"AWS Simple Storage Service",code:"N/A"},sidebar:"tutorialSidebar",previous:{title:"AWS Route 53",permalink:"/books/aws-developer-associated/route53"},next:{title:"AWS Serverless Application Model",permalink:"/books/aws-developer-associated/sam"}},u=[],p={toc:u};function c(e){var t=e.components,a=(0,n.Z)(e,i);return(0,l.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h4",{id:"overview"},"Overview"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Object-based, serverless storage service"),(0,l.kt)("li",{parentName:"ul"},"Object-based storage: ",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Storage that manages data as objects"),(0,l.kt)("li",{parentName:"ul"},"Other architectures:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"File system: manage data as files and file hierarchy"),(0,l.kt)("li",{parentName:"ul"},"Block storage: manage data as blocks within sectors and tracks"))))),(0,l.kt)("li",{parentName:"ul"},"Unlimited storage"),(0,l.kt)("li",{parentName:"ul"},"S3 object:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Contains:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Key"),(0,l.kt)("li",{parentName:"ul"},"Value: the value itself made up of a sequence of bytes"),(0,l.kt)("li",{parentName:"ul"},"Version ID"),(0,l.kt)("li",{parentName:"ul"},"Metadata"))),(0,l.kt)("li",{parentName:"ul"},"Size: 0B - 5TB"))),(0,l.kt)("li",{parentName:"ul"},"S3 bucket:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Hold objects, can have folders too"),(0,l.kt)("li",{parentName:"ul"},"Bucket name is universal")))),(0,l.kt)("h4",{id:"s3-classes"},"S3 Classes"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Trade Retrieval Time, Accessibility, Durability for cheaper storage")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Tier"),(0,l.kt)("th",{parentName:"tr",align:null},"Features"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Standard"),(0,l.kt)("td",{parentName:"tr",align:null},"Fast. 99.99% Availability. 11 9's Durability. Replicated across at least 3 AZs")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Intelligence"),(0,l.kt)("td",{parentName:"tr",align:null},"Data is moved to the most cost-effective tier without impact to performance, overhead. Using ML")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Standard Infrequently Access"),(0,l.kt)("td",{parentName:"tr",align:null},"Still Fast. Cheaper if access < 1 time / month, or additional retrieval fees applied. Overall -50% than Standard")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"One Zone IA"),(0,l.kt)("td",{parentName:"tr",align:null},"Still Fast. 1 AZ. 99.5% Availability. Data could be destroyed. Retrieval fee is applied. 20% Cheaper than Standard IA")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Glacier"),(0,l.kt)("td",{parentName:"tr",align:null},"Long-term cold storage. Retrieval time can take a minute to hours. >=3 AZs")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Glacier Deep Archive"),(0,l.kt)("td",{parentName:"tr",align:null},"Data retrieval time is 12 hours")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"All 11 9's Durability")),(0,l.kt)("h4",{id:"security"},"Security"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Private by default"),(0,l.kt)("li",{parentName:"ul"},"Logging can be enabled, and stored in another bucket"),(0,l.kt)("li",{parentName:"ul"},"Access control is configured using ACL (legacy but not deprecated) and Bucket Policies (IAM)")),(0,l.kt)("h4",{id:"encryption"},"Encryption"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Transit: SSL"),(0,l.kt)("li",{parentName:"ul"},"Encrypted at rest")),(0,l.kt)("h4",{id:"data-consistency"},"Data consistency"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"New object: consistent - we can read right after writing")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Overwrite, Delete: it takes time to replicate over AZs. "),(0,l.kt)("p",{parentName:"li"},"=> If we read data immediately, old data can be returned - Inconsistent"),(0,l.kt)("p",{parentName:"li"},"=> Should wait a few seconds"))),(0,l.kt)("h4",{id:"cross-region-replication-crr"},"Cross region replication (CRR)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"When enabled, objects are replicated automatically")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Higher availability, durability")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Versioning must be turned on (on both buckets)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Replication rule:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Apply for new creation object or not"),(0,l.kt)("li",{parentName:"ul"},"IAM (grant permissions for buckets)"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Replicating existing objects requires contacting to AWS Support"),(0,l.kt)("h4",{parentName:"li",id:"versioning"},"Versioning")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Once enabled, it can be suspended only.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Store all versions of objects in S3 "))),(0,l.kt)("h4",{id:"life-cycle-management"},"Life cycle management"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Automate the process of moving objects to another storage class, and deleting objects"),(0,l.kt)("li",{parentName:"ul"},"Can be used with versioning, can be applied to both current and previous versions")),(0,l.kt)("h4",{id:"transfer-acceleration"},"Transfer Acceleration"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Fast & secure transfer objects to end users, utilizes CloudFront's edge location")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Upload to Edge Location's distinct URL instead of uploading to S3 directly."),(0,l.kt)("p",{parentName:"li"},"Edge location route the file to S3 using AWS backbone network (optimized)"))),(0,l.kt)("h4",{id:"presigned-url"},"Presigned URL"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Generate URL to grant temporary access (get or put) to private objects")),(0,l.kt)("h4",{id:"mfa-delete"},"MFA Delete"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Versioning must be enabled"),(0,l.kt)("li",{parentName:"ul"},"AWS CLI must be used to turn on MFA"),(0,l.kt)("li",{parentName:"ul"},"Only the bucket owner login as root user can delete objects from the bucket")))}c.isMDXComponent=!0}}]);