(self.webpackChunkmoonlight_8978_github_io=self.webpackChunkmoonlight_8978_github_io||[]).push([[3477],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=s(n),m=i,k=d["".concat(p,".").concat(m)]||d[m]||c[m]||r;return n?a.createElement(k,l(l({ref:t},u),{},{components:n})):a.createElement(k,l({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var s=2;s<r;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1158:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},metadata:function(){return p},toc:function(){return s},default:function(){return c}});var a=n(2122),i=n(9756),r=(n(7294),n(3905)),l=["components"],o={title:"CI/CD",code:"N/A"},p={unversionedId:"aws-developer-associated/ci-cd",id:"aws-developer-associated/ci-cd",isDocsHomePage:!1,title:"CI/CD",description:"CodeCommit",source:"@site/books/aws-developer-associated/ci-cd.md",sourceDirName:"aws-developer-associated",slug:"/aws-developer-associated/ci-cd",permalink:"/books/aws-developer-associated/ci-cd",editUrl:"https://github.com/moonlight8978/moonlight8978.github.io/edit/v2/books/books/aws-developer-associated/ci-cd.md",version:"current",lastUpdatedAt:1623052541,formattedLastUpdatedAt:"6/7/2021",frontMatter:{title:"CI/CD",code:"N/A"},sidebar:"tutorialSidebar",previous:{title:"Auto Scaling Group",permalink:"/books/aws-developer-associated/auto-scaling-group"},next:{title:"AWS CloudFormation",permalink:"/books/aws-developer-associated/cloud-formation"}},s=[{value:"CodeCommit",id:"codecommit",children:[]},{value:"CodeBuild",id:"codebuild",children:[]},{value:"CodeDeploy",id:"codedeploy",children:[]},{value:"CodePipeline",id:"codepipeline",children:[]}],u={toc:s};function c(e){var t=e.components,n=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"codecommit"},"CodeCommit"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Git-based"),(0,r.kt)("li",{parentName:"ul"},"Encrypted at rest as well as in transit"),(0,r.kt)("li",{parentName:"ul"},"Access:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Add SSH key to IAM user => returns ",(0,r.kt)("inlineCode",{parentName:"li"},"SSH key ID")," (remote user)"),(0,r.kt)("li",{parentName:"ul"},"Use HTTPS credentials")))),(0,r.kt)("h2",{id:"codebuild"},"CodeBuild"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Database can be created using Docker")),(0,r.kt)("h5",{id:"versions"},"Versions"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"0.1"),": runs each build command in seperated instance"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"0.2"),": runs all build commands in single instance")),(0,r.kt)("h5",{id:"phases"},"Phases"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"install"),(0,r.kt)("li",{parentName:"ul"},"pre_build"),(0,r.kt)("li",{parentName:"ul"},"build"),(0,r.kt)("li",{parentName:"ul"},"post_build")),(0,r.kt)("h2",{id:"codedeploy"},"CodeDeploy"),(0,r.kt)("h5",{id:"overview"},"Overview"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Fully managed deploy pipeline")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Use cases"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Deploy EC2, on-premise instances, Lambda, or ECS"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"In-place or Blue/Green deployment")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Integrate with many tools: Jenkins, CodePipeline, Puppet, Chef, Ansible, ..."))),(0,r.kt)("h5",{id:"core-components"},"Core Components"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Application: Unique identifier for the application being deployed. ")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Deployment Groups: A set of EC2 instances or Lambda functions where the new revision is deployed to")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Deployment: This is the process, and components used to apply new revision")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Deployment Configuration: A set of deployment rules, with success/failure conditions included")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"AppSpec file: Deployment actions that CodeDeploy should execute during deployment")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Revision: the changes"))),(0,r.kt)("h5",{id:"in-place-deployment"},"In-place deployment"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The app on each instance in the deployment group is stopped")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The latest app revision is installed, started, and validated")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Load balancer can be used to deregister instance during its deployment, and register back after the deploy is completed")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Can only be used on EC2 (single instance / auto scaling group), or On-premise"))),(0,r.kt)("h5",{id:"bluegreen-deployment"},"Blue/Green deployment"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Environment config:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Automatically copy EC2 ASG: "),(0,r.kt)("li",{parentName:"ul"},"Manually provision instances: "))),(0,r.kt)("li",{parentName:"ul"},"Instances are provisioned for the replacement environment"),(0,r.kt)("li",{parentName:"ul"},"The latest application revision is installed on the replacement instances"),(0,r.kt)("li",{parentName:"ul"},"Optional wait time: Application testing, system verification"),(0,r.kt)("li",{parentName:"ul"},"Replacement environment will be registered with an ELB, old environment will be deregistered")),(0,r.kt)("h5",{id:"appspec-file"},"AppSpec file"),(0,r.kt)("h5",{id:"codedeploy-agent"},"CodeDeploy Agent"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"EC2 instance need CodeDeployAgent, so the instance can report the progression back to CodeDeploy"),(0,r.kt)("li",{parentName:"ul"},"Service Role may required based on our deployment strategy")),(0,r.kt)("h2",{id:"codepipeline"},"CodePipeline"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Represent all components"),(0,r.kt)("li",{parentName:"ul"},"Stage represent a step. Common steps: Source > Build > Deploy (support many platforms/services)")))}c.isMDXComponent=!0}}]);