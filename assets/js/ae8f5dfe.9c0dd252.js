"use strict";(self.webpackChunkmoonlight_8978_github_io=self.webpackChunkmoonlight_8978_github_io||[]).push([[976],{2598:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>a,frontMatter:()=>r,metadata:()=>d,toc:()=>c});var s=i(1527),t=i(7463);const r={sidebar_position:1},l="Rate Limiter",d={id:"sd/rate-limiter",title:"Rate Limiter",description:"Algorithm",source:"@site/docs/sd/rate-limiter.md",sourceDirName:"sd",slug:"/sd/rate-limiter",permalink:"/docs/sd/rate-limiter",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/sd/rate-limiter.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"System Design",permalink:"/docs/category/system-design"},next:{title:"Distributed system",permalink:"/docs/sd/distributed"}},o={},c=[{value:"Algorithm",id:"algorithm",level:3},{value:"Storage",id:"storage",level:3},{value:"Implementation",id:"implementation",level:3},{value:"Issues",id:"issues",level:3},{value:"Monitoring",id:"monitoring",level:3},{value:"Redis Sorted Set",id:"redis-sorted-set",level:3}];function h(e){const n={code:"code",h1:"h1",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"rate-limiter",children:"Rate Limiter"}),"\n",(0,s.jsx)(n.h3,{id:"algorithm",children:"Algorithm"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Token Bucket:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Who uses? Amazon, Stripe"}),"\n",(0,s.jsx)(n.li,{children:"Wisely used, simple, well understood"}),"\n",(0,s.jsxs)(n.li,{children:["Token are put in the bucket periodically (eg: refill each 4s), once the bucket is full, no tokens are added","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Each request consumes 1 token, if there not enough tokens, the request is dropped"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Can handle a burst of request, as long as the tokens are enough"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Leaking bucket"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Shopify uses"}),"\n",(0,s.jsxs)(n.li,{children:["FIFO queue, requests are processed at a fixed rate","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"When a request arrives, the system check if the queue is full, if it is not full, the request is added to the queue, otherwise, the request is dropped"}),"\n",(0,s.jsx)(n.li,{children:"Request are pulled from the queue and processed at the fixed interval"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"A burst of traffic fills up the queue with old requests, if they are not processed in time, the current requests will be rate limited"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Fixed window counter"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Divide the timeline into fixed-size time windows, and assign a counter for each window"}),"\n",(0,s.jsx)(n.li,{children:"The rate will be reset at the end of each window"}),"\n",(0,s.jsx)(n.li,{children:"Spike in traffic at the edge of a window cause more requests than threshold"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Sliding window log"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Keeps track of request timestamps"}),"\n",(0,s.jsx)(n.li,{children:"Check current window log size"}),"\n",(0,s.jsx)(n.li,{children:"Memory consumed because even if the request is rejected, its timestamp still be stored"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Sliding window counter"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Combine Fixed window counter and Sliding window log"}),"\n",(0,s.jsx)(n.li,{children:"Define an overlap percentage of previous window as the rolling window"}),"\n",(0,s.jsx)(n.li,{children:"Total request = current window + previous window * overlap percentage"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"storage",children:"Storage"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Redis is preferred"}),"\n",(0,s.jsx)(n.li,{children:"Fast"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"INCR"}),", ",(0,s.jsx)(n.code,{children:"EXPIRE"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"implementation",children:"Implementation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Can be implemented in server-side, middlewares, or API-gateway, ..."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"issues",children:"Issues"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Race condition"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Lock is a solution for race condition, but is slows down the system"}),"\n",(0,s.jsx)(n.li,{children:"Redis Sorted Set can be used"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Synchronization"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Redis to centralize data"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"monitoring",children:"Monitoring"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The rate limitting algorithm/rules are effective","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"How many requests are dropped"}),"\n",(0,s.jsx)(n.li,{children:"Burst traffic"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"redis-sorted-set",children:"Redis Sorted Set"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Each user has a sorted set for rate limitting"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"When the request, the following batch will be executed"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"ts = getCurrentTimestamp()\ninterval = getRateLimitInterval()\nMULTI\n  ZREMRANGEBYSCORE user_id 0 (ts - interval)\n  ZADD user_id ts\n  ZRANGE user_id 0 -1\n  EXPIRE user_id interval\nEXEC\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Blocked request are counted"}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},7463:(e,n,i)=>{i.d(n,{Z:()=>d,a:()=>l});var s=i(959);const t={},r=s.createContext(t);function l(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);