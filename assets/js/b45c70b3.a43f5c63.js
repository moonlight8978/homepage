(self.webpackChunkmoonlight_8978_github_io=self.webpackChunkmoonlight_8978_github_io||[]).push([[3847],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return p},kt:function(){return d}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=u(a),d=r,k=c["".concat(s,".").concat(d)]||c[d]||m[d]||i;return a?n.createElement(k,l(l({ref:t},p),{},{components:a})):n.createElement(k,l({ref:t},p))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=a[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},6262:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return o},metadata:function(){return s},toc:function(){return u},default:function(){return m}});var n=a(2122),r=a(9756),i=(a(7294),a(3905)),l=["components"],o={title:"Amazon SQS",code:"N/A"},s={unversionedId:"aws-developer-associated/sqs",id:"aws-developer-associated/sqs",isDocsHomePage:!1,title:"Amazon SQS",description:"* Queueing vs Streaming",source:"@site/books/aws-developer-associated/sqs.md",sourceDirName:"aws-developer-associated",slug:"/aws-developer-associated/sqs",permalink:"/books/aws-developer-associated/sqs",editUrl:"https://github.com/moonlight8978/moonlight8978.github.io/edit/v2/books/books/aws-developer-associated/sqs.md",version:"current",lastUpdatedAt:1623052541,formattedLastUpdatedAt:"6/7/2021",frontMatter:{title:"Amazon SQS",code:"N/A"},sidebar:"tutorialSidebar",previous:{title:"AWS Simple Notification Service",permalink:"/books/aws-developer-associated/sns"},next:{title:"AWS Step Functions",permalink:"/books/aws-developer-associated/step-functions"}},u=[],p={toc:u};function m(e){var t=e.components,a=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Queueing vs Streaming"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Queueing: delete message when consumed. Does not care about what to do with message. Not real time. Have to pull, not reactive"),(0,i.kt)("li",{parentName:"ul"},"Streaming: consumers react to events. Real-time. Event live in stream for long period of time."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"SQS is pull-based, not push-based.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Usecase:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"App publishes messages to the queue"),(0,i.kt)("li",{parentName:"ul"},"Other app pulls the queue, see new message, and do something"),(0,i.kt)("li",{parentName:"ul"},"Other app reports that the message is completed"),(0,i.kt)("li",{parentName:"ul"},"Original app pull the queue and see the messages is no longer on the queue."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Limitation:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Message size: 1B - 256KB",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Extended Client Library for Java allow send message up to 2GB. The object will be stored in S3, and referenced to message."))),(0,i.kt)("li",{parentName:"ul"},"Message retention: how long SQS hold the message",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Default: 4 days"),(0,i.kt)("li",{parentName:"ul"},"Custom: 60 seconds - 14 days"))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Queue types:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Standard Queue: ",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Nearly unlimited number of transactions per second"),(0,i.kt)("li",{parentName:"ul"},"Guarantees that message will be delivered at least once"),(0,i.kt)("li",{parentName:"ul"},"More than one copy of message will be delivered out of order"),(0,i.kt)("li",{parentName:"ul"},"Provide best-effort ordering to ensure a message is delivered in the same order that it come"))),(0,i.kt)("li",{parentName:"ul"},"FIFO: ",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Same capabilities as Standard Queue"),(0,i.kt)("li",{parentName:"ul"},"Support ordered message"),(0,i.kt)("li",{parentName:"ul"},"Limited to 300 transactions per second"))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Visibility Timeout: Prevent reading message when another one is busy with that message"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Is the time that a message will be invisible in the queue, after a reader pick up the message",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"default: 30s"),(0,i.kt)("li",{parentName:"ul"},"customize: 0s - 12 hours"))),(0,i.kt)("li",{parentName:"ul"},"Deleted if the job is completed within visibility timeout",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Message is visible to another app if the job is not completed in time"),(0,i.kt)("li",{parentName:"ul"},"Make the message can be delivered twice potentially"))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Short polling vs Long polling"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Short polling:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Default"),(0,i.kt)("li",{parentName:"ul"},"Returns message as soon as possible, even if the message queue being polled is empty"),(0,i.kt)("li",{parentName:"ul"},"Usecase: When we need a message right away"))),(0,i.kt)("li",{parentName:"ul"},"Long polling:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Wait until messages arrives in the queue, or the long poll timeout expires"),(0,i.kt)("li",{parentName:"ul"},"Reduce the number of empty receives => Inexpensive, reduce cost"),(0,i.kt)("li",{parentName:"ul"},"Use for most usecase")))))))}m.isMDXComponent=!0}}]);