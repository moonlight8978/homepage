(self.webpackChunkmoonlight_8978_github_io=self.webpackChunkmoonlight_8978_github_io||[]).push([[9069],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return s},kt:function(){return d}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),u=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=u(a),d=r,k=c["".concat(p,".").concat(d)]||c[d]||m[d]||l;return a?n.createElement(k,i(i({ref:t},s),{},{components:a})):n.createElement(k,i({ref:t},s))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var u=2;u<l;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},2160:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return o},metadata:function(){return p},toc:function(){return u},default:function(){return m}});var n=a(2122),r=a(9756),l=(a(7294),a(3905)),i=["components"],o={title:"AWS CloudFormation",code:"https://github.com/moonlight8978/aws-cda-preparation/tree/cfn"},p={unversionedId:"aws-developer-associated/cloud-formation",id:"aws-developer-associated/cloud-formation",isDocsHomePage:!1,title:"AWS CloudFormation",description:"Overview",source:"@site/books/aws-developer-associated/cloud-formation.md",sourceDirName:"aws-developer-associated",slug:"/aws-developer-associated/cloud-formation",permalink:"/books/aws-developer-associated/cloud-formation",editUrl:"https://github.com/moonlight8978/moonlight8978.github.io/edit/v2/books/books/aws-developer-associated/cloud-formation.md",version:"current",lastUpdatedAt:1623052541,formattedLastUpdatedAt:"6/7/2021",frontMatter:{title:"AWS CloudFormation",code:"https://github.com/moonlight8978/aws-cda-preparation/tree/cfn"},sidebar:"tutorialSidebar",previous:{title:"CI/CD",permalink:"/books/aws-developer-associated/ci-cd"},next:{title:"AWS CloudFront",permalink:"/books/aws-developer-associated/cloud-front"}},u=[],s={toc:u};function m(e){var t=e.components,a=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h4",{id:"overview"},"Overview"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"IaC: Infrastructure as Code"),(0,l.kt)("li",{parentName:"ul"},"AWS Quick Starts: Collection of prebuilt CloudFormation stacks")),(0,l.kt)("h4",{id:"template-formats"},"Template Formats"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Metadata & Description")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"AWSTemplateFormatVersion: 2010-09-09\nDescription: Launch simple webpage\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Parameters: values to pass to template at runtime")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"Parameters:\n    InstanceType:\n        Description: EC2 instance type\n        Type: String\n        Default: t2.micro\n        AllowedValues:\n            - t2.nano\n            - t2.micro\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Resources: resources to create, eg. IAM roles, EC2 instances, Lambda functions, RDS, ... Required at least 1 resource")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"Resources:\n    WebServer:\n        Type: 'AWS::EC2::Instance'\n        Properties:\n            Tags:\n                - Key: Name\n                    Value: Apache default webserver\n            InstanceType: !Ref InstanceType\n            ImageId: 'ami-xxx'\n            SecurityGroupIds:\n                - !GetAtt SecurityGroup.GroupId\n            UserData:\n                'Fn::Base64':\n                    !Sub |\n                    #! /usr/bin/env bash\n                    su ec2-user\n                    sudo yum install httpd-y\n                    sudo service httpd start\n    SecurityGroup:\n        Type: 'AWS::EC2::SecurityGroup'\n        Properties:\n            GroupDescription: Enable internet users to access.\n            SecurityGroupIngress:\n                - IpProtocol: tcp\n                    FromPort: 80\n                    ToPort: 80\n                    CidrIp: 0.0.0.0/0\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Outputs: values that returns, to print to console, eg. Created server IP address'")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"Outputs:\n    PublicIp:\n        Value: !GetAtt WebServer.PublicIp\n")),(0,l.kt)("h4",{id:"update-stack"},"Update stack"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"When template format is modified and pushed. CloudFormation will intelligently change or remove/recreate the resources")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Direct Update:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Update stack directly, and CloudFormation will immediately deploys them"),(0,l.kt)("li",{parentName:"ul"},"Use when want to quickly deploy"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Execute change set: "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Changes can be reviewed, after being confirmed, CloudFormation will deploys the changes"),(0,l.kt)("li",{parentName:"ul"},"Manual confirmation is required"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Update strategies:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Update with No Interruption",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Update without Disrupting operation"),(0,l.kt)("li",{parentName:"ul"},"Without changing the resource physical ID"))),(0,l.kt)("li",{parentName:"ul"},"Update with Some Interruptions",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Update the resources with some interruptions"),(0,l.kt)("li",{parentName:"ul"},"Retains the physical ID"))),(0,l.kt)("li",{parentName:"ul"},"Replacement",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Recreate resources during the update"),(0,l.kt)("li",{parentName:"ul"},"Generate new physical ID"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Prevent Update Stacks:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Prevent data loss or interruption to the service (eg. Database)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Use StackPolicy"))))),(0,l.kt)("h4",{id:"nested-stack"},"Nested Stack"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Allows to reference CFN templates to another CFN templates"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Modular templates (reusability)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Assemble large templates (reduce complexity)"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"AWSTemplateFormatVersion: 2010-09-09\nResources:\n    MyStack: \n        Type: AWS::CloudFormation::Stack\n        Properties:\n            TemplateURL: https://s3.abc.xyz/..../xxx.template\n            TimeoutInMinutes: '60'\n")))))),(0,l.kt)("h4",{id:"drift-detection"},"Drift detection"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"When stack's actual config differs (has drifted) by what CloudFormation expected",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Developer make changes manually instead of modify the templates"),(0,l.kt)("li",{parentName:"ul"},"CloudFormation can detect drift and inform the user if resources have been deleted or modified",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"DELETED"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"MODIFIED"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"NOT_CHECKED"),", and ",(0,l.kt)("inlineCode",{parentName:"li"},"IN_SYNC")," "))))),(0,l.kt)("li",{parentName:"ul"},"CloudFormation does not detect drift on any nested resource, run drift detection directly on nested template instead")),(0,l.kt)("h4",{id:"rollbacks"},"Rollbacks"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Turned on by default, can be turned off by using ",(0,l.kt)("inlineCode",{parentName:"li"},"--ignore-rollback")," via AWS CLI"),(0,l.kt)("li",{parentName:"ul"},"Occured by:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Syntax errors"),(0,l.kt)("li",{parentName:"ul"},"Resources trying to delete is no longer exists"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ROLLBACK_IN_PROGRESS"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"UPDATE_ROLLBACK_COMPLETE"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"UPDATE_ROLLBACK_FAILED"))),(0,l.kt)("h4",{id:"pseudo-parameters"},"Pseudo parameters"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Parameters are predefined by AWS")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Use ",(0,l.kt)("inlineCode",{parentName:"p"},"Ref")," function"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'Outputs:\n    StackRegion:\n        Value: !Ref "AWS::Region"\n'))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"AWS::Partition"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"AWS::Region"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"AWS::StackId"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"AWS::StackName"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"AWS::URLSuffix")),(0,l.kt)("h4",{parentName:"li",id:"resources-attributes"},"Resources Attributes")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"CreationPolicy: prevent its status from reaching create complete until CFN receives a specific number of success signals or timeout is exceeded."),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"Resources:\n    SimpleASG:\n        Type: AWS::AutoScaling::AutoScalingGroup\n        CreationPolicy:\n            ResourceSignal:\n                Count: 3\n                Timeout: PT15M\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"DeletionPolicy: reverse or backup a resource when stack is deleted"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Delete"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"Retain"),", or ",(0,l.kt)("inlineCode",{parentName:"li"},"Snapshot"))),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"Resources:\n    SimpleDB:\n        Type: AWS::RDS::DBInstance\n        DeletionPolicy: Retain\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"UpdatePolicy: only for ASG, ElastiCache, Domain, and Lambda Alias"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"UpdatePolicy:\n    AutoScalingReplacingUpdate:\n        WillReplace: True\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"UpdateReplacePolicy: to retain or backup the existing physical insatnce of a resource when it is replaced during a stack update operation"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Delete"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"Retain"),", or ",(0,l.kt)("inlineCode",{parentName:"li"},"Snapshot"))),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"Resources:\n    SimpleDB:\n        Type: AWS::RDS::DBInstance\n        UpdateReplacePolicy: Retain\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"DependsOn: the resource will be created only after the creation of the resources in DependsOn"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"Resources:\n    SimpleEC2Instance:\n        Type: AWS::EC2::Instance\n        DependsOn: SimpleDB\n    SimpleDB:\n        Type: AWS::RDS::DBInstance\n")))),(0,l.kt)("h4",{id:"intrinsic-functions"},"Intrinsic Functions"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Assign value at runtime")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Functions"),(0,l.kt)("th",{parentName:"tr",align:null},"Purpose"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Fn::Base64")),(0,l.kt)("td",{parentName:"tr",align:null},"base64 representation of the input string")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Fn::Cidr")),(0,l.kt)("td",{parentName:"tr",align:null},"Returns an array of CIDR address blocks")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Fn::And"),"/",(0,l.kt)("inlineCode",{parentName:"td"},"Equals"),"/",(0,l.kt)("inlineCode",{parentName:"td"},"If"),"/",(0,l.kt)("inlineCode",{parentName:"td"},"Not"),"/",(0,l.kt)("inlineCode",{parentName:"td"},"Or")),(0,l.kt)("td",{parentName:"tr",align:null},"Condition functions")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Fn::Join")),(0,l.kt)("td",{parentName:"tr",align:null},"Joins strings by delimiter")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Fn::Select")),(0,l.kt)("td",{parentName:"tr",align:null},"Select object by index")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Fn::Sub")),(0,l.kt)("td",{parentName:"tr",align:null},"Substitues")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"Fn::GetAtt"))),(0,l.kt)("td",{parentName:"tr",align:null},"Returns resource attribute value")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},(0,l.kt)("inlineCode",{parentName:"strong"},"Ref"))),(0,l.kt)("td",{parentName:"tr",align:null},"returns the value of specified parameter or resource")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"..."),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"Ref")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Returns different things for different resources (lookup in the AWS Docs): eg. ARN, Resource Name, Physical ID")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"If a value for a resource can't be get from ",(0,l.kt)("inlineCode",{parentName:"p"},"Ref"),", using ",(0,l.kt)("inlineCode",{parentName:"p"},"Fn::GetAtt"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"Fn::GetAtt")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Allow to access many different variables on a resource ",(0,l.kt)("inlineCode",{parentName:"li"},"!GetAtt SecurityGroup.GroupId"),", ....")))),(0,l.kt)("h4",{id:"wait-conditions"},"Wait Conditions"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"2 use cases:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"To coordinate stack resource creation with configuratoin actions that are external to the stack creation"),(0,l.kt)("li",{parentName:"ul"},"To track the status of a configuration process")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"WebServer:\n    Type: AWS::EC2::Instance\n    Properties:\n        UserData:\n            Fn::Base64:\n                Ref: WaitHandle\n        ImageId: ami-xxx\nWaitHandle:\n    Type: AWS::CloudFormation::WaitConditionHandle\nWaitCondition:\n    Type: AWS::CloudFormation::WaitCondition\n    DependsOn: WebServer\n    Properties:\n        Handle:\n            Ref: WaitHandle\n    Timeout: '300'\n    # Count: \n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"cfn-signal")," helper script can be used in order to signal success to a wait conditoin")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"WaitCondition")," is similar to ",(0,l.kt)("inlineCode",{parentName:"p"},"CreationPolicy")," for EC2, and ASG"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"CreationPolicy: waits onthe dependent resources"),(0,l.kt)("li",{parentName:"ul"},"WaitCondition: waits on the wait conditoin (external)")))),(0,l.kt)("h4",{id:"practical-notes"},"Practical notes:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Template file should be stored at S3"),(0,l.kt)("li",{parentName:"ul"},"Stack options which can be configured during creation:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Permission: IAM role for CloudFormation to perform CRUD resources in the stack. Default to current user credentials"),(0,l.kt)("li",{parentName:"ul"},"Stack Policy: Same structure as IAM policy. Defines the resources that will be protected during updates"),(0,l.kt)("li",{parentName:"ul"},"Rollback config: After the operation complete, CloudFormation can watch for specific alarm (CloudWatch event), and rollback the stack if and alarm threshold exceeds."),(0,l.kt)("li",{parentName:"ul"},"Notification: through SNS"),(0,l.kt)("li",{parentName:"ul"},"Stack creation options:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Rollback on failure: Enabled/Disabled"),(0,l.kt)("li",{parentName:"ul"},"Timeout"),(0,l.kt)("li",{parentName:"ul"},"Termination protection")))))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"yarn add cfn-lint"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"yarn cfn-lint validate ./path-to-template")," to validate the template file"),(0,l.kt)("li",{parentName:"ul"},"When instance is stopped/started manually, the output instance IP will be outdated")),(0,l.kt)("h4",{id:"todo"},"TODO"),(0,l.kt)("p",null,"Deploy a project using: "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"ruby on rails, nginx, puma (using traditional deployment)"),(0,l.kt)("li",{parentName:"ul"},"bastion host"),(0,l.kt)("li",{parentName:"ul"},"redis"),(0,l.kt)("li",{parentName:"ul"},"mysql"),(0,l.kt)("li",{parentName:"ul"},"s3 bucket"),(0,l.kt)("li",{parentName:"ul"},"vpc, subnet, ..."),(0,l.kt)("li",{parentName:"ul"},"auto scaling group")))}m.isMDXComponent=!0}}]);